//mixins
.clearfix() {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

.ul-reset() {
  list-style: none;
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }
}

.dib(@valign:top) {
  display: inline-block;
  vertical-align: @valign;
  zoom: 1;
  *display: inline;
}

.opacity (@opacity: 0.5) {
  @ieOpacity: @opacity * 100;
  -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=@{ieOpacity})';
  filter: ~"alpha(opacity=@{ieOpacity})";
  -moz-opacity: @opacity;
  opacity: @opacity;
}

.linear-gradient(@bottomColor, @topColor) {
  background-color: @bottomColor;
  background-image: linear-gradient(to bottom, @bottomColor 0, @topColor 100%);
}

.linear-gradient_mid-color(@bottom-color-position, @mid-color-position, @top-color-position) {
  @bottom-color: extract(@bottom-color-position, 1);
  @bottom-position: extract(@bottom-color-position, 2);
  @mid-color: extract(@mid-color-position, 1);
  @mid-position: extract(@mid-color-position, 2);
  @top-color: extract(@top-color-position, 1);
  @top-position: extract(@top-color-position, 2);

  background-color: @bottom-color;
  background-image: linear-gradient(to bottom, @bottom-color @bottom-position, @mid-color @mid-position, @top-color @top-position);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)", argb(@bottom-color), argb(@top-color)));
}

.horizontal-gradient (@startColor, @endColor) {
  background-color: @startColor;
  background-image: linear-gradient(to left, @startColor, @endColor);
}

.placeholder(@color) {
  &.placeholder {
    color: @color;
  }
  &::-webkit-input-placeholder {
    color: @color;
    opacity: 1;
  }
  &:-moz-placeholder {
    color: @color;
    opacity: 1;
  }
  &::-moz-placeholder {
    color: @color;
    opacity: 1;
  }
  &:-ms-input-placeholder {
    color: @color;
    .opacity(1);
  }
}

.link-reset() {
  text-decoration: none;
}


